
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author arnav
 */
public class SaveToFileFrame extends javax.swing.JFrame {
    private MyHashTable theHT;
    /**
     * Creates new form saveToFileFrame
     */
    public SaveToFileFrame() {
        initComponents();
        feedbackLabel.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        saveEmpButton = new javax.swing.JButton();
        feedbackLabel = new javax.swing.JLabel();
        infoLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titleLabel.setText("Save System To File");

        infoLabel.setText("Employees will be saved to a .txt file");

        saveEmpButton.setBackground(new java.awt.Color(0, 153, 204));
        saveEmpButton.setForeground(new java.awt.Color(255, 255, 255));
        saveEmpButton.setText("SAVE");
        saveEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEmpButtonActionPerformed(evt);
            }
        });

        feedbackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackLabel.setText("<Msg>");
        feedbackLabel.setMaximumSize(new java.awt.Dimension(100, 100));

        infoLabel1.setText("Files are stored along with project files of this application");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(feedbackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(saveEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(titleLabel)))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(infoLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoLabel)
                .addGap(18, 18, 18)
                .addComponent(saveEmpButton)
                .addGap(18, 18, 18)
                .addComponent(feedbackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoLabel1)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEmpButtonActionPerformed
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter dateTimeFormat = DateTimeFormatter.ofPattern("yyyy.MM.dd HH,mm,SS");
        String directory = System.getProperty("user.dir");
        String fileName = "SaveEMS"+dateTimeFormat.format(now)+".txt";
            
        File myFile = new File(directory, fileName);
        try {
            myFile.createNewFile();
            FileWriter fileWriter = new FileWriter(fileName);
            for (ArrayList<EmployeeInfo> bucket : theHT.buckets) {
                for (int j = 0; j < bucket.size(); j++) {
                    if (bucket.get(j) instanceof FTE targetFTE) {
                        String fileContent = "FTE>" + targetFTE.getEmpNumber() + ">" + targetFTE.getFirstName() + ">" + 
                                targetFTE.getLastName() + ">" + targetFTE.getWorkLoc() + ">" + targetFTE.getDeductRate()
                                + ">" + targetFTE.getSalary() + ">" + targetFTE.getGender();
                        fileWriter.write(fileContent + System.lineSeparator());
                    } else if (bucket.get(j) instanceof PTE targetPTE){
                        String fileContent = "PTE>" + targetPTE.getEmpNumber() + ">" + targetPTE.getFirstName() + ">" + 
                                targetPTE.getLastName() + ">" + targetPTE.getWorkLoc() + ">" + targetPTE.getDeductRate()
                                + ">" + targetPTE.getHourlyWage() + ">" + targetPTE.getHoursPerWeek() + ">" + targetPTE.getWeeksPerYear() + ">" + targetPTE.getGender();
                        fileWriter.write(fileContent + System.lineSeparator());
                    }
                }
            }
                
            fileWriter.close();
            feedbackLabel.setText("File created: " + myFile.getName());
        } catch (IOException e) {
                e.printStackTrace();
                feedbackLabel.setText("An error occurred.");
                               
        }
        
    }//GEN-LAST:event_saveEmpButtonActionPerformed
    
    public void setHashTable(MyHashTable theRefValue){
        theHT = theRefValue;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveToFileFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveToFileFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveToFileFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveToFileFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaveToFileFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel infoLabel1;
    private javax.swing.JButton saveEmpButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
